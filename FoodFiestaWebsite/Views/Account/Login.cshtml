@{
    ViewData["Title"] = "Login";
    Layout = "/Views/Shared/_AuthLayout.cshtml";
}

<form id="registerForm" method="post">
    <h2>Login</h2>
    <hr />
    <!-- Replace the validation summary with a regular div -->
    <div class="text-danger" role="alert" id="validationSummary"></div>

    <div class="form-floating mb-3">
        <input id="username" class="form-control" autocomplete="email" aria-required="true" placeholder="user name" />
        <label for="username">Username</label>
        <span id="usernameValidation" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input id="email" class="form-control" autocomplete="email" aria-required="true" placeholder="name@example.com" />
        <label for="email">Email</label>
        <span id="emailValidation" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input type="password" id="password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Password" />
        <label for="password">Password</label>
        <span id="passwordValidation" class="text-danger"></span>
    </div>

    <button id="registerSubmit" type="button" class="w-100 btn btn-lg btn-primary" onclick="submitForm()">Login</button>
</form>

<script>
    function submitForm() {
        var username = document.getElementById('username').value;
        var email = document.getElementById('email').value;
        var password = document.getElementById('password').value;

        var data = {
            username: username,
            email: email,
            password: password,
        };

        console.log(JSON.stringify(data));

        fetch("https://localhost:7097/api/Auth/login", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json' // Specify the content type as JSON
            },
            body: JSON.stringify(data) // Convert the data object to a JSON string
        })
            .then(response => {
                // Handle the response from the server
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                window.location.href = 'https://localhost:7294/'
                return response.text();
            })
            .then(data => {
                localStorage.setItem('jwtToken', data);
                console.log(data);
            })
            .catch(error => {
                // Handle errors that occurred during the fetch
                console.error('There was a problem with the fetch operation:', error);
            });
    }
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}